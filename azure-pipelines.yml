# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main
- dev
- test

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '98498ffd-0f5e-4128-a2e6-f11d377c4d0f'
  imageRepository: 'ihubptiboldosockets'
  containerRegistry: 'fhirservertest.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Kubernetes@1
      displayName: Deploy to healthcore-dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
      inputs:
       connectionType: 'Kubernetes Service Connection'
       kubernetesServiceEndpoint: 'healthcore-dev'
       namespace: 'healthcore-dev'
       command: 'set'
       arguments: 'image deployment/boldo-socket boldo-sockets=fhirservertest.azurecr.io/ihubptiboldosockets:$(Build.BuildId)'
       secretType: 'dockerRegistry'
       containerRegistryType: 'Azure Container Registry'
    - task: Kubernetes@1
      displayName: Deploy to healthcore-test
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/test'))
      inputs:
       connectionType: 'Kubernetes Service Connection'
       kubernetesServiceEndpoint: 'healthcore-test'
       namespace: 'healthcore-test'
       command: 'set'
       arguments: 'image deployment/boldo-socket boldo-sockets=fhirservertest.azurecr.io/ihubptiboldosockets:$(Build.BuildId)'
       secretType: 'dockerRegistry'
       containerRegistryType: 'Azure Container Registry'
    - task: Kubernetes@1
      displayName: Deploy to healthcore-prod
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      inputs:
       connectionType: 'Kubernetes Service Connection'
       kubernetesServiceEndpoint: 'healthcore-prod'
       namespace: 'healthcore-prod'
       command: 'set'
       arguments: 'image deployment/boldo-socket boldo-sockets=fhirservertest.azurecr.io/ihubptiboldosockets:$(Build.BuildId)'
       secretType: 'dockerRegistry'
       containerRegistryType: 'Azure Container Registry'